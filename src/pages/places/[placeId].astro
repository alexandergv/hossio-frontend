---
import Carrousel from "../../components/Carrousel/Carrousel";
import ReviewComments from "../../components/ReviewComments/ReviewComments";
import ReviewInput from '../../components/ReviewInput/ReviewInput';
import Map from '../../components/Map/Map'; 
import Layout from '../../layouts/Layout.astro';
import axiosInstance from 'services/axiosConfig'
import config from '../../config';

export interface Review {
    text: string;
    author: string;
}
  

interface Place {
    id: string;
    name: string;
    description: string;
    rating: number;
    images: string[];
    reviews: Review[];
    latitude: string;
    longitude: string;
}
  

const { placeId } = Astro.params;
const placesData = async () : Promise<Place> => {
  let response = await axiosInstance.get(`/places/getById/${placeId}`);
  const place: Place = response.data
  return place;
}

const placeDetails: Place =  await placesData();


if (!placeDetails) {
  Astro.response.status = 404;
  Astro.response.statusText = 'Not found';
  throw Error("no page with this id was found")
};

import { getSession } from '../../middleware/session';
const session = getSession(Astro.cookies.get('auth_token')?.value);
const isAuthenticated = session.authenticated;
const user = session.user;

if(isAuthenticated && user.role =='owner') {
  return Astro.redirect('/owners');
}

---
<style>
      .place-details {
        padding: 20px;
        max-width: 800px;
        margin: 0 auto;
      }

      .place-details h1 {
        font-size: 32px;
        margin-bottom: 20px;
        text-align: center;
      }

      .place-info {
        display: flex;
        flex-direction: column;
      }

      .place-info p {
        margin-bottom: 10px;
      }

      .place-content {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
      }

      .place-images,
      .place-map {
        flex: 1;
        margin-right: 20px;
      }

      .place-map {
        margin-left: 20px;
      }
</style>
<Layout session={session} title=`${placeDetails.name} - Hossio``>
    <main class="place-details">
      <h1>{placeDetails.name}</h1>
      <div class="place-content">
        <div class="place-images">
          <Carrousel client:load images={placeDetails.images} />
        </div>
        <div class="place-map">
          <Map client:only="react" latitude={placeDetails.latitude} longitude={placeDetails.longitude} name={placeDetails.name} />
        </div>
      </div>
      <div class="place-info">
        <p>{placeDetails.description}</p>
        <p>Calificaci√≥n promedio: {placeDetails.rating} / 5</p>
      </div>
      <ReviewInput client:load placeId={placeId} userId={session.user?.sub}/>
      <ReviewComments client:visible placeId={placeId}/>
    </main>
  </Layout>
